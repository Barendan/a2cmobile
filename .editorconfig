# Remove the line below or set to "false" if you want to inherit .editorconfig settings from higher directories
# If "root = true", .editorconfig settings will not be inherited from parent directories
#root = true


# Default for all files, unless overridden below
[*]
charset = utf-8
trim_trailing_whitespace = true
indent_style = space
# don't specify an indent_size here
end_of_line = lf
insert_final_newline = true


# Editor Config files
[*.editorconfig]
indent_size = 2
end_of_line = crlf


# Gitignore files
[.gitignore]
indent_size = 2
end_of_line =


# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj,sln}]
indent_size = 2
# Visual Studio does not consistently use Editorconfig when creating or updating its project files,
# but other editors might, so use VS default settings to prevent version control churn
charset = utf-8-bom
trim_trailing_whitespace = false
end_of_line = crlf
insert_final_newline = false


# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2
# Visual Studio does not consistently use Editorconfig when creating or updating its config files,
# but other editors might, so use VS default settings to prevent version control churn
charset = utf-8-bom
trim_trailing_whitespace = false
end_of_line = crlf
insert_final_newline = false


# Entity Framework files
[*.{edmx,edmx.diagram,Designer.cs}]
indent_size = 4
# Visual Studio does not consistently use Editorconfig when creating or updating EF files,
# but other editors might, so use VS default settings to prevent version control churn
charset = utf-8-bom
trim_trailing_whitespace = false
end_of_line = crlf
insert_final_newline = false


# Windows batch files
[*.{bat,cmd}]
end_of_line = crlf


# Code files
[*.{cs,csx,vb,vbx}]
indent_size = 4


# Cascading Stylesheet files
[*.css]
indent_size = 2


# HTML files
[*.html]
indent_size = 4


# JavaScript files
[*.js]
indent_size = 2


# JSON files
[*.json]
indent_size = 2


# Sassy CSS
[*.scss]
indent_size = 2


# SQL files
[*.sql]
indent_size = 2


#### .NET Coding Conventions ####
[*.{cs,vb}]

# Organize usings
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = true

# this. and Me. preferences
dotnet_style_qualification_for_event = false:suggestion
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_property = false:suggestion

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary:suggestion
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:suggestion
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:suggestion

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent

# Expression-level preferences
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_object_initializer = true:suggestion
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = false:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion

# Field preferences
dotnet_style_readonly_field = true:suggestion

# Parameter preferences
dotnet_code_quality_unused_parameters = all:suggestion


#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = false:suggestion
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion

# Expression-bodied members
csharp_style_expression_bodied_accessors = when_on_single_line:suggestion
csharp_style_expression_bodied_constructors = when_on_single_line:suggestion
csharp_style_expression_bodied_indexers = when_on_single_line:suggestion
csharp_style_expression_bodied_lambdas = when_on_single_line:suggestion
csharp_style_expression_bodied_local_functions = when_on_single_line:suggestion
csharp_style_expression_bodied_methods = when_on_single_line:suggestion
csharp_style_expression_bodied_operators = when_on_single_line:suggestion
csharp_style_expression_bodied_properties = when_on_single_line:suggestion

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_prefer_switch_expression = false:suggestion

# Null-checking preferences
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
csharp_prefer_static_local_function = false:silent
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async

# Code-block preferences
csharp_prefer_braces = when_multiline:suggestion
csharp_prefer_simple_using_statement = false:suggestion

# Expression-level preferences
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = false:silent
csharp_style_prefer_range_operator = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:silent

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace:suggestion


#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true


#### Naming Conventions ####

# Naming symbols
# Example:
# dotnet_naming_symbols.<My Naming Symbol Title>.applicable_kinds = [namespace|class|struct|interface|enum|property|method|field|event|delegate|parameter|type_parameter|local|local_function]
# dotnet_naming_symbols.<My Naming Symbol Title>.applicable_accessibilities = [public|internal|friend|private|protected|protected_internal|protected_friend|private_protected|local]
# dotnet_naming_symbols.<My Naming Symbol Title>.required_modifiers = [abstract|must_inherit|async|const|readonly|static|shared]

dotnet_naming_symbols.non_private_constants.applicable_kinds = field
dotnet_naming_symbols.non_private_constants.applicable_accessibilities = public, internal
dotnet_naming_symbols.non_private_constants.required_modifiers = const

dotnet_naming_symbols.private_constants.applicable_kinds = field
dotnet_naming_symbols.private_constants.applicable_accessibilities = private, private_protected, protected, protected_internal
dotnet_naming_symbols.private_constants.required_modifiers = const

dotnet_naming_symbols.private_field_members.applicable_kinds = field
dotnet_naming_symbols.private_field_members.applicable_accessibilities = private
dotnet_naming_symbols.private_field_members.required_modifiers =

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers =

dotnet_naming_symbols.interfaces.applicable_kinds = interface
dotnet_naming_symbols.interfaces.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interfaces.required_modifiers =

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers =

# Naming styles
# Example:
# dotnet_naming_style.<My Naming Style Title>.required_prefix = <String (unquoted)>
# dotnet_naming_style.<My Naming Style Title>.required_suffix = <String (unquoted)>
# dotnet_naming_style.<My Naming Style Title>.word_separator = <String (unquoted)>
# dotnet_naming_style.<My Naming Style Title>.capitalization = [pascal_case|camel_case|first_word_upper|all_upper|all_lower]

dotnet_naming_style.all_upper.required_prefix =
dotnet_naming_style.all_upper.word_separator = _
dotnet_naming_style.all_upper.capitalization = all_upper

dotnet_naming_style.prefixed_with_underscore.required_prefix = _
dotnet_naming_style.prefixed_with_underscore.capitalization = camel_case

dotnet_naming_style.prefixed_with_i.required_prefix = I
dotnet_naming_style.prefixed_with_i.capitalization = pascal_case

dotnet_naming_style.pascal_case.capitalization = pascal_case

# Naming rules (references "dotnet_naming_symbols" and "dotnet_naming_style")
# <My Naming Rule Title> = <My Naming Symbol Title>_should_be_<My Naming Style Title>
# Example:
# dotnet_naming_rule.<My Naming Rule Title>.severity = [error|warning|suggestion|silent|none]
# dotnet_naming_rule.<My Naming Rule Title>.symbols = <Naming Symbol Title>
# dotnet_naming_rule.<My Naming Rule Title>.style = <Naming Style Title>

dotnet_naming_rule.non_private_constants_should_be_all_upper.severity = suggestion
dotnet_naming_rule.non_private_constants_should_be_all_upper.symbols = non_private_constants
dotnet_naming_rule.non_private_constants_should_be_all_upper.style = all_upper

dotnet_naming_rule.private_constants_should_be_all_upper.severity = suggestion
dotnet_naming_rule.private_constants_should_be_all_upper.symbols = private_constants
dotnet_naming_rule.private_constants_should_be_all_upper.style = pascal_case

dotnet_naming_rule.private_field_members_should_be_prefixed_with_underscore.severity = suggestion
dotnet_naming_rule.private_field_members_should_be_prefixed_with_underscore.symbols = private_field_members
dotnet_naming_rule.private_field_members_should_be_prefixed_with_underscore.style = prefixed_with_underscore

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.interfaces_should_be_prefixed_with_i.severity = warning
dotnet_naming_rule.interfaces_should_be_prefixed_with_i.symbols = interfaces
dotnet_naming_rule.interfaces_should_be_prefixed_with_i.style = prefixed_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case


# Fix conflict between dotnet_diagnostic.IDE0079 "Remove unnecessary suppression"
# and dotnet_diagnostic.CA1031 "Do not catch general exception types"
# https://github.com/dotnet/roslyn/issues/47288
dotnet_remove_unnecessary_suppression_exclusions = CA1031


##############################################
####    Roslyn Compiler Default config    ####
##############################################

# IDE0001: Simplify Names
dotnet_diagnostic.IDE0001.severity = suggestion

# IDE0004: Remove Unnecessary Cast
dotnet_diagnostic.IDE0004.severity = warning

# IDE0011: Add braces
dotnet_diagnostic.IDE0011.severity = suggestion

# IDE0047: Remove unnecessary parentheses
dotnet_diagnostic.IDE0047.severity = silent

# IDE0051: Remove unused private members
dotnet_diagnostic.IDE0051.severity = suggestion

# IDE0055: Fix formatting
dotnet_diagnostic.IDE0055.severity = suggestion

# IDE0058: Expression value is never used
dotnet_diagnostic.IDE0058.severity = silent

# IDE0059: Unnecessary assignment of a value
dotnet_diagnostic.IDE0059.severity = suggestion

# IDE1006: Naming Styles
dotnet_diagnostic.IDE1006.severity = suggestion


#####################################
####    FxCop Analyzer config    ####
#####################################

# CA1031: Do not catch general exception types
dotnet_diagnostic.CA1031.severity = suggestion

# CA1032: Implement standard exception constructors
dotnet_diagnostic.CA1032.severity = warning

# CA1052: Static holder types should be Static or NotInheritable
dotnet_diagnostic.CA1052.severity = suggestion

# CA1056: Uri properties should not be strings
dotnet_diagnostic.CA1056.severity = silent

# CA1063: Implement IDisposable Correctly
dotnet_diagnostic.CA1063.severity = warning

# CA1303: Do not pass literals as localized parameters
dotnet_diagnostic.CA1303.severity = silent

# CA1305: Specify IFormatProvider
dotnet_diagnostic.CA1305.severity = suggestion

# CA1822: Mark members as static
dotnet_diagnostic.CA1822.severity = suggestion

# CA2007: Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.CA2007.severity = suggestion

# CA2100: Review SQL queries for security vulnerabilities
dotnet_diagnostic.CA2100.severity = warning

# CA2237: Mark ISerializable types with serializable
dotnet_diagnostic.CA2237.severity = warning


##################################
####    C# Compiler config    ####
##################################

# CS0109: Member does not hide an inherited member; new keyword is not required
dotnet_diagnostic.CS0109.severity = error

# CS0219: Variable is assigned but its value is never used
dotnet_diagnostic.CS0219.severity = suggestion

# CS1572: XML comment has a param tag, but there is no parameter by that name
dotnet_diagnostic.CS1572.severity = warning

# CS1573: Parameter has no matching param tag in the XML comment (but other parameters do)
dotnet_diagnostic.CS1573.severity = warning

# CS1591: Missing XML comment for publicly visible type or member
dotnet_diagnostic.CS1591.severity = suggestion

# CS1734: XML comment has a paramref tag, but there is no parameter by that name
dotnet_diagnostic.CS1734.severity = error

# CS1998: Async method lacks 'await' operators and will run synchronously
dotnet_diagnostic.CS1998.severity = warning

# CS8321: Local function is declared but never used
dotnet_diagnostic.CS8321.severity = warning

# CS8602: Dereference of a possibly null reference.
dotnet_diagnostic.CS8602.severity = error

# CS8625: Cannot convert null literal to non-nullable reference type.
dotnet_diagnostic.CS8625.severity = error


###########################################
####    Roslynator Extension config    ####
###########################################

# RCS1001: Add braces (when expression spans over multiple lines).
dotnet_diagnostic.RCS1001.severity = silent

# RCS1003: Add braces to if-else (when expression spans over multiple lines).
dotnet_diagnostic.RCS1003.severity = suggestion

# RCS1005: Simplify nested using statement.
dotnet_diagnostic.RCS1005.severity = suggestion

# RCS1018: Add accessibility modifiers.
dotnet_diagnostic.RCS1018.severity = silent

# RCS1036: Remove redundant empty line.
dotnet_diagnostic.RCS1036.severity = suggestion

# RCS1037: Remove trailing white-space.
dotnet_diagnostic.RCS1037.severity = suggestion

# RCS1044: Remove original exception from throw statement.
dotnet_diagnostic.RCS1044.severity = suggestion

# RCS1057: Add empty line between declarations.
dotnet_diagnostic.RCS1057.severity = none

# RCS1061: Merge if statement with nested if statement.
dotnet_diagnostic.RCS1061.severity = suggestion

# RCS1075: Avoid empty catch clause that catches System.Exception.
dotnet_diagnostic.RCS1075.severity = warning

# RCS1080: Use 'Count/Length' property instead of 'Any' method.
dotnet_diagnostic.RCS1080.severity = none

# RCS1090: Call 'ConfigureAwait(false)'.
dotnet_diagnostic.RCS1090.severity = suggestion

# RCS1097: Remove redundant 'ToString' call.
dotnet_diagnostic.RCS1097.severity = warning

# RCS1102: Make class static.
dotnet_diagnostic.RCS1102.severity = silent

# RCS1118: Mark local variable as const.
dotnet_diagnostic.RCS1118.severity = silent

# RCS1124: Inline local variable.
dotnet_diagnostic.RCS1124.severity = suggestion

# RCS1138: Add summary to documentation comment.
dotnet_diagnostic.RCS1138.severity = suggestion

# RCS1140: Add exception to documentation comment.
dotnet_diagnostic.RCS1140.severity = suggestion

# RCS1141: Add 'param' element to documentation comment.
dotnet_diagnostic.RCS1141.severity = suggestion

# RCS1146: Use conditional access.
dotnet_diagnostic.RCS1146.severity = silent

# RCS1151: Remove redundant cast.
dotnet_diagnostic.RCS1151.severity = warning

# RCS1155: Use StringComparison when comparing strings.
dotnet_diagnostic.RCS1155.severity = suggestion

# RCS1163: Unused parameter.
dotnet_diagnostic.RCS1163.severity = suggestion

# RCS1168: Parameter name differs from base name.
dotnet_diagnostic.RCS1168.severity = suggestion

# RCS1169: Make field read-only.
dotnet_diagnostic.RCS1169.severity = suggestion

# RCS1192: Use regular string literal instead of verbatim string literal.
dotnet_diagnostic.RCS1192.severity = suggestion

# RCS1194: Implement exception constructors.
dotnet_diagnostic.RCS1194.severity = warning

# RCS1195: Use ^ operator.
dotnet_diagnostic.RCS1195.severity = none

# RCS1197: Optimize StringBuilder.Append/AppendLine call.
dotnet_diagnostic.RCS1197.severity = warning

# RCS1213: Remove unused member declaration.
dotnet_diagnostic.RCS1213.severity = suggestion

# RCS1228: Unused element in documentation comment.
dotnet_diagnostic.RCS1228.severity = suggestion
